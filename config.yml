springContextFileLocation: sync-spring.xml
version: 2.2-SNAPSHOT (1018)

# ActiveMQ config
messaging:
    username:
    password:
    dataFormat: defaultDataFormatDef
    txnManager: syncRequiredTxn
    nodeEvents:
        numThreads: 1
    events:
        repo:
            node:
                peakChangesWindowSize: 1000
                numConsumers: 5
                maxConsumers: 10
                threadAffinityTracking: WarnOnMismatch
                prefetchSize: 1000
                redlivery:
                    numRetries: 5
                    backOffMultiplier: 2.0
                deadletterUri: jms:queue:dead.alfresco.repo.events.nodes
                endpoint:
                   name: Consumer.[syncServiceId].VirtualTopic.alfresco.repo.events.nodes
                   uriName: ${messaging.events.repo.node.endpoint.name}
                   type: Queue
                   uri: syncActivemq:${messaging.events.repo.node.endpoint.uriName}
                   bean: org.apache.activemq:type=Broker,brokerName=localhost,destinationType=${messaging.events.repo.node.endpoint.type},destinationName=${messaging.events.repo.node.endpoint.name}
    broker:
        host: activemq
        port: 61616
        url: failover:(tcp://${messaging.broker.host}:${messaging.broker.port}?wireFormat.maxInactivityDurationInitalDelay=30000)?timeout=3000&jms.useCompression=true&startupMaxReconnectAttempts=0&jms.redeliveryPolicy.maximumRedeliveries=${messaging.events.repo.node.maxConsumers}
    pool:
        maxConnections: 5
        maxActiveSessionsPerConnection: 101
    activeMQMetrics:
        initialDelay: 10
        period: 10

# SQL persistence config
sql:
    #
    # Manually control how the system handles maximum string lengths.
    # Any zero or negative value is ignored.
    # Only change this after consulting support or reading the appropriate Javadocs for
    # org.alfresco.repo.domain.schema.SchemaBootstrap for V2.1.2
    maximumStringLength: -1
    #
    # Limit hibernate session size by trying to amalgamate events for the L2 session invalidation
    # - hibernate works as is up to this size
    # - after the limit is hit events that can be grouped invalidate the L2 cache by type and not instance
    # events may not group if there are post action listener registered (this is not the case with the default distribution)
    hibernateMaxExecutions: 20000
    db:
        schema:
            name: null
            stopAfterSchemaBootstrap: null
            update:
                flag: true
                lockRetryCount: 5
                lockRetryWaitSeconds: 1
        driver: org.postgresql.Driver
        url: jdbc:postgresql://@@HOST@@/syncservice-postgresql
        username: alfresco
        password: admin
        pool:
            initial: 50
            max: 100
            statements:
                enable: true
                max: 275
            min: 10
            idle: 50
            wait:
                max: 5000
            validate:
                query:
                borrow: true
                return: false
            evict:
                interval: 600000
                idle:
                    min: 1800000
                #
                # note: for 'db.pool.evict.num.tests' see http://commons.apache.org/dbcp/configuration.html (numTestsPerEvictionRun)
                #       and also following extract from "org.apache.commons.pool.impl.GenericKeyedObjectPool" (1.5.5)
                #
                #       * The number of objects to examine during each run of the idle object evictor thread (if any).
                #       * When a negative value is supplied, <code>ceil({@link #getNumIdle})/abs({@link #getNumTestsPerEvictionRun})</code>
                #       * tests will be run.  I.e., when the value is <code>-n</code>, roughly one <code>n</code>th of the
                #       * idle objects will be tested per run.
                #
                num:
                    tests: 1
                validate: false
            abandoned:
                detect: false
                time: 300
                #
                # db.pool.abandoned.log=true (logAbandoned) adds overhead (http://commons.apache.org/dbcp/configuration.html)
                # and also requires db.pool.abandoned.detect=true (removeAbandoned)
                #
                log: false
        txn:
            isolation: -1
    transaction:
        mode:
            readOnly: PROPAGATION_REQUIRED, readOnly
            default: PROPAGATION_REQUIRED

# Dropwizard specific server configuration. Custom user property names are not allowed in this section.
server:
    type: default
    applicationConnectors:
        - type: http
          port: 9090
          # type: https
          # keyStorePath: ./sync.jks
          # keyStorePassword: N9SnIgrcAx7zWr
          # keyStoreType: JCEKS
          # validateCerts: false
    adminConnectors:
        - type: http
          port: 9093
    requestLog:
        appenders: []

repo:
    scheme: http
    hostname: repository
    port: 8080
    syncconfig:
        url: ${repo.scheme}://${repo.hostname}:${repo.port}/alfresco/service/devicesync/config

sync:
    descriptor:
        name: SyncDescriptor
    whitelistAllNodeTypes: false
    checker:
      endpoint: alfresco/service/devicesync/checktxns
      # in ms
      checkDuration: 60000
    health:
      events:
        # in ms
        eventLagTolerance: 5000
    # Authentication config (for authenticating against a repository)
    authentication:
        basicAuthUrl: ${repo.scheme}://${repo.hostname}:${repo.port}/alfresco/s/api/authentication
        cache:
            expiryMs: 900000
    registration:
        filename: registration.json
    cleanup:
        events:
            # 28 days
            keepPeriod: 28d
            # in seconds
            schedulerInitialDelay: 0
            # every hour
            schedulerPeriod: 3600
            schedulerExpression: 0 0  ?  *
        numThreads: 5
        batchSize: 50
    # Syncer thread pool (for handling sync resolutions of client and repository changes)
    threadpool:
        size:
            core: 100
            max: 400
        # Integer max value
        queueCapacity: 2147483647
    # Sync record cache settings
    cache:
        # expiry from creation time (in ms) -> 30s
        expiryTime: 30000
    camel:
        endpoint:
            alfresco:
                monitoring: activemq:topic:alfresco.monitoring

    metrics:
        reporter:
            graphite:
                address: 127.0.0.1 # ip of graphite server
                enabled: false
                pollingInterval: 60  #in seconds
                port: 2003 # port of graphite carbon receiver
                prefix: org.alfresco.sync

hibernate:
    jdbc:
        use_streams_for_binary: true
    show_sql: false
    cache:
        use_query_cache: false
    max_fetch_depth: 10
    cache:
        provider_class:
        use_second_level_cache: false
    default_batch_fetch_size: 1
    jdbc.batch_size: 32
    connection:
        release_mode: auto
        isolation: 2

logging:
  level: INFO
  loggers:
    "org.alfresco.service.common.auth": WARN
    "org.apache.activemq": WARN
    "com.sun.jersey.api.container.filter.LoggingFilter": WARN
    "org.alfresco.service": INFO
  appenders:
    - type: console
      threshold: ALL
      timeZone: UTC
      target: stdout
      logFormat: "%-5level [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %logger - %msg%n"
    - type: file
      threshold: ALL
      timeZone: UTC
      currentLogFilename: ./logs/sync-service.log
      archive: true
      archivedLogFilenamePattern: ./logs/sync-service-%d.log.gz
      archivedFileCount: 5
      logFormat: "%-5level [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %logger - %msg%n"
